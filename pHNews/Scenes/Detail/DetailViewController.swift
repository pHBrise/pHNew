//
//  DetailViewController.swift
//  pHNews
//
//  Created by Phanvit Chevamongkolnimit on 5/9/2567 BE.
//  Copyright (c) 2567 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import WebKit

protocol DetailDisplayLogic: AnyObject
{
    func displayNews(viewModel: Detail.WebUrl.ViewModel)
}

class DetailViewController: UIViewController, DetailDisplayLogic
{
    var interactor: DetailBusinessLogic?
    var router: (NSObjectProtocol & DetailRoutingLogic & DetailDataPassing)?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    deinit {
        router = nil
        interactor = nil
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = DetailInteractor()
        let presenter = DetailPresenter()
        let router = DetailRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        webView = WKWebView(frame: self.view.frame)
        
        // Add the WebView to the view hierarchy
        self.view.addSubview(webView)
        
        getWebViewUrl()
    }
    
    // MARK: Do something
    
    //@IBOutlet weak var nameTextField: UITextField!
    var webView: WKWebView!
    
    func getWebViewUrl()
    {
        let request = Detail.WebUrl.Request()
        interactor?.getWebUrl(request: request)
    }
    
    func displayNews(viewModel: Detail.WebUrl.ViewModel)
    {
        showPopupWebView(with: viewModel.url)
    }
    
    func showPopupWebView(with url: URL?) {
        // Convert the string to a URL
        guard let url = url else {
            print("Invalid URL string")
            return
        }
        let request = URLRequest(url: url)
        
        // Load the request in the WebView
        webView.load(request)
    }
}
